name: Validations

on:
  push:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
# pubnub-yml:
#   name: "Validate .pubnub.yml"
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout project
#       uses: actions/checkout@v3
#     - name: Checkout validator action
#       uses: actions/checkout@v3
#       with:
#         repository: pubnub/client-engineering-deployment-tools
#         ref: v1
#         token: ${{ secrets.GH_TOKEN }}
#         path: .github/.release/actions
#     - name: "Run '.pubnub.yml' file validation"
#       uses: ./.github/.release/actions/actions/validators/pubnub-yml
#       with:
#         token: ${{ secrets.GH_TOKEN }}
#     - name: Cancel workflow runs for commit on error
#       if: failure()
#       uses: ./.github/.release/actions/actions/utils/fast-jobs-failure

  linters:
    name: Launch all cargo linters to check condition of the codes
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run cargo check tool to check if the codes are valid
      run: |
       cargo check --workspace --all-targets --all-features
    - name: Run cargo clippy tool to check if all the best code practices are followed
      run: |
       cargo clippy --workspace --all-targets --all-features -- -D warnings
    - name: Run cargo fmt tool to check if codes are well formatted 
      run: |
       cargo fmt --check --verbose --all

  cargo-deny:
    name: Check Cargo crate dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}

  all-validations:
    name: Validations
    runs-on: ubuntu-latest
    needs: [linters, cargo-deny]
    steps:
      - name: Validations summary
        run: echo -e "\033[38;2;95;215;0m\033[1mAll validations passed"
