name: rust
version: 0.4.1
schema: 1
scm: github.com/pubnub/rust
files: []
changelog:
  - date: 2023-10-31
    version: 0.4.1
    changes:
      - type: improvement
        text: "Update license information."
  - date: 2023-10-16
    version: 0.4.0
    changes:
      - type: feature
        text: "Update the crypto module structure and add enhanced AES-CBC cryptor."
  - date: 2023-08-30
    version: 0.3.0
    changes:
      - type: feature
        text: "PubNub subscribe API implemented."
      - type: feature
        text: "PubNub presence API implemented."
      - type: feature
        text: "Event engine as a new method of handling connections for `subscribe` and `presence` methods implemented."
  - date: 2023-06-07
    version: 0.2.1
    changes:
      - type: bug
        text: "Fixed versions in the docs."
      - type: bug
        text: "Fixed broken links for `docs.rs` page."
      - type: bug
        text: "Fixed logo image."
  - date: 2023-06-05
    version: 0.2.0
    changes:
      - type: feature
        text: "New SDK implementation."
      - type: feature
        text: "PubNub `publish` API implemented."
      - type: feature
        text: "PubNub `access manager` API implemented." 
      - type: feature
        text: "Add `parse_token` for authorization token debug."
sdks:
  - 
      type: library
      full-name: Rust SDK
      short-name: Rust
      artifacts:
        -
          language: rust
          tags:
            - Server
          source-repository: https://github.com/pubnub/rust
          documentation: https://www.pubnub.com/docs/sdks/rust/
          tier: 2
          artifact-type: library
          distributions:
            -
              distribution-type: source-code
              distribution-repository: crates.io
              package-name: pubnub
              location: https://crates.io/crates/pubnub
              supported-platforms:
                supported-operating-systems:
                  Linux:
                    runtime-version:
                      - Rust 1.65.0+
                    minimum-os-version:
                      - Ubuntu 12.04
                    maximum-os-version:
                      - Ubuntu 22.04 LTS
                    target-architecture:
                      - x86-64
                  macOS:
                    runtime-version:
                      - Rust 1.65.0+
                    minimum-os-version:
                      - macOS 10.12
                    maximum-os-version:
                      - macOS 11.0.1
                    target-architecture:
                      - x86-64
                  Windows:
                    runtime-version:
                      - Rust 1.65.0+
                    minimum-os-version:
                      - Windows Vista Ultimate
                    maximum-os-version:
                      - Windows 10 Home
                    target-architecture:
                      - x86-64
features:
  access:
    - ACCESS-GRANT-TOKEN
    - ACCESS-PARSE-TOKEN
    - ACCESS-SET-TOKEN
  publish: 
    - PUBLISH-STORE-FLAG
    - PUBLISH-RAW-JSON
    - PUBLISH-WITH-METADATA
    - PUBLISH-GET
    - PUBLISH-POST
    - PUBLISH-ASYNC
    - PUBLISH-REPLICATION-FLAG
    - PUBLISH-MESSAGE-TTL
  subscribe:
    - SUBSCRIBE-CHANNELS
    - SUBSCRIBE-CHANNEL-GROUPS
    - SUBSCRIBE-PRESENCE-CHANNELS
    - SUBSCRIBE-PRESENCE-CHANNELS-GROUPS
    - SUBSCRIBE-WITH-TIMETOKEN
    - SUBSCRIBE-FILTER-EXPRESSION
    - SUBSCRIBE-PUBLISHER-UUID
    - SUBSCRIBE-PUBSUB-V2
    - SUBSCRIBE-SIGNAL-LISTENER
    - SUBSCRIBE-MEMBERSHIP-LISTENER
    - SUBSCRIBE-OBJECTS-CHANNEL-LISTENER
    - SUBSCRIBE-OBJECTS-UUID-LISTENER
    - SUBSCRIBE-MESSAGE-ACTIONS-LISTENER
    - SUBSCRIBE-FILE-LISTENER
  presence:
    - PRESENCE-HERE-NOW
    - PRESENCE-WHERE-NOW
    - PRESENCE-SET-STATE
    - PRESENCE-GET-STATE
    - PRESENCE-HEARTBEAT
    - PRESENCE-DELTAS
supported-platforms:
  - version: PubNub Rust SDK
    platforms:
      - Windows
      - Mac OS 
      - Unix 
      - WebAssembly
      - Embedded systems
      - More information: https://doc.rust-lang.org/nightly/rustc/platform-support.html
      - and https://github.com/pubnub/rust#limitations
